generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cars_for_sale {
  id           Int            @id @default(autoincrement())
  brand        String         @db.VarChar(50)
  model        String         @db.VarChar(100)
  year         Int            @db.Int
  img          String?        @db.VarChar(255)
  color        String?        @db.VarChar(50)
  mileage      Int?           @db.Int
  category     String?        @db.VarChar(50)
  price        Decimal        @db.Decimal(10, 2)
  invoice      invoice?
}

model cars_for_service {
  id              Int            @id @default(autoincrement())
  customer_id     Int            @db.Int
  car_details     String         @db.VarChar(160)
  mechanic        String         @db.VarChar(160)
  customer        customer       @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model customer {
  id                  Int                 @id @default(autoincrement())
  first_name          String              @db.VarChar(50)
  last_name           String              @db.VarChar(50)
  birth_date          DateTime            @db.Date
  email               String?             @db.VarChar(100)
  phone               String?             @db.VarChar(20)
  cars_for_service    cars_for_service[]
  invoice             invoice[]
}

model invoice {
  id                  Int              @id @default(autoincrement())
  customer_id         Int              @db.Int
  salesperson_id      Int              @db.Int
  car_id              Int              @db.Int      @unique
  amount              Int              @db.Int
  customers           customer?        @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  salesperson         salesperson?     @relation(fields: [salesperson_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cars_for_sale       cars_for_sale?   @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model salesperson {
  id           Int            @id @default(autoincrement())
  first_name   String?        @db.VarChar(50)
  last_name    String?        @db.VarChar(50)
  commission   Decimal        @db.Decimal(4, 2)
  invoice invoice[]
}
